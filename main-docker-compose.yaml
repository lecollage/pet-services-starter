version: '3.1'

services:

  postgres:
    image: postgres
    restart: ${MAIN_RESTART_POLICY}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_database:/var/lib/postgresql/data
    networks:
      - pet-project-network

  adminer:
    image: adminer
    restart: ${MAIN_RESTART_POLICY}
    ports:
      - ${POSTGRES_ADMINER_EXPOSE_PORT}:8080
    depends_on:
      - "postgres"
    networks:
      - pet-project-network

  pet-web-server:
    image: "ekalashnikov59/pet-web-server:${PET_WEB_SERVER}"
    depends_on:
      - "postgres"
    networks:
      - pet-project-network

  pet-web-client:
    image: "ekalashnikov59/pet-web-client:${PET_WEB_CLIENT}"
    depends_on:
      - "pet-web-server"
    networks:
      - pet-project-network

  pet-reverse-proxy-nginx:
    image: "blacklabelops/nginx"
    environment:
      - SERVER1REVERSE_PROXY_LOCATION1=/
      - SERVER1REVERSE_PROXY_PASS1=http://pet-web-client:80/
      - SERVER1REVERSE_PROXY_LOCATION2=/api
      - SERVER1REVERSE_PROXY_PASS2=http://pet-web-server:8090/
    ports:
      - ${NGINX_REVERSE_PROXY_EXPOSE_PORT_1}:80
    depends_on:
      - "pet-web-client"
    networks:
      - pet-project-network

volumes:
    postgres_database:
        external: true

networks:
  pet-project-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
